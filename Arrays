1) Program to find the second-largest element in the given array
a) without Taking input from user Solution is ->

import java.util.Arrays;
public class Arrayfull {
    public static void main(String[] args) {
        int arr [] = {7 , 3 , 9 , 4 , 5};
        Arrays.sort(arr);
        int n = arr.length - 2 ;
        System.out.println(arr[n]);
    }
}

b) with Taking input from user Solution is ->
import java.util.Scanner;

public class Arrayfull {
    static int max(int arr[]){
        int mx = Integer.MIN_VALUE;
        for (int i=0;i< arr.length;i++){
            if (arr[i]>mx){
                mx = arr[i];
            }
        }
        return mx;
    }
    static int Secondmx(int arr[]) {
        int max1 = max(arr);
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == max1) {
                arr[i] = Integer.MIN_VALUE;
            }
        }
        int max2 = max(arr);
        return max2;}
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter Size of array: ");
        int n = sc.nextInt();
        int arr [] = new int[n];
        System.out.print("Enter Element One by one: ");
        for (int i=0;i< arr.length;i++){
            arr[i]=sc.nextInt();
        }
        System.out.println(Secondmx(arr));
    }
}

2) For an array of integers return the first value that is repeating in the array
package Day6;
public class Arrayfull {

    static int first(int arr[]) {
        for (int i = 0; i < arr.length; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] == arr[j]) {
                    return arr[i];
                }}
        }return -1;
    }
public static void main(String[] args) {
        int arr [] = {7 , 3 , 9 , 4 , 5, 4, 5};
            System.out.println(first(arr));
}}

3) For an array of integers return the last value that is repeating in the array
package Arrayfull;
public class Task {
    static int last(int[] arr) {
        int lastRepeating = -1;
        for (int i = 0; i < arr.length; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] == arr[j]) {
                    lastRepeating = arr[i];  // update when a duplicate is found
                }
            }
        }
        return lastRepeating;
    }
    public static void main(String[] args) {
        int[] arr = {1, 2, 3, 1, 3};
        System.out.println("Last repeating value: " + last(arr));
    }
}

4) a) Swap using temporary variable
public class Practice1 {
    static void swap(int a,int b) {
        int temp;
        temp = a;
        a = b;
        b = temp;
        System.out.println(a+ " " + b);
    }
    public static void main(String[] args) {
        int a = 10;
        int b = 20;
        System.out.println("Before Swapping: ");
        System.out.println(a+ " " + b);
        System.out.println("After Swapping: ");
        swap(10,20);
    }
}

4) b) Swap using temporary variable in Array
public class Practice1 {
    static int[] swap(int [] arr) {
        int temp;
            temp = arr[0];
            arr[0] = arr[1];
            arr[1] = temp;

        return arr;}
    public static void main(String[] args) {
        int arr [] = {9,3};
        System.out.println("Before Swapping: ");
        for (int i=0;i< arr.length;i++){
            System.out.print(arr[i]+" ");
        }
        System.out.println(" ");
        swap(arr);
        System.out.println("After Swapping: ");
        for (int i=0;i< arr.length;i++){
            System.out.print(arr[i]+" ");
        }
    }
}

Q5. Swap using sum and difference
public class Practice1 {
    static void swap(int a, int b) {
        a = a + b;
        b = a-b;
        a = a-b;
        System.out.println(a + " " + b);
    }
    public static void main(String[] args) {
        int a = 10;
        int b = 20;
        System.out.println("Before Swapping: ");
        System.out.println(a + " " + b);
        System.out.println("After Swapping: ");
        swap(10, 20);
    }
}

//Q6. Reverse an array
public class Practice1 {
    public static void main(String[] args) {
        int[] arr = {1,2,3};
        int n = arr.length;
        int [] ans = new int[n];
        for (int i = 0; i < n ; i++) {
                ans[i]= arr[n-i-1];
        }
    for(int i=0;i<n;i++){
        System.out.println(ans[i]);
    }
    }
}

//Q7. Count the Number of Occurence of a Particular Element
public class Task {
   public static void main(String[] args) {
        Solution 1
       int[] arr = {1,2,3,1,3,1};
       int n =1;
       int count =0;
       for (int i=0 ; i< arr.length; i++ ){
           if (arr[i] == n) {
               count++;
           }}
       System.out.println(count);

        Solution 2
       int [] arr = {1,2,3,1,2,1};
       int f = 2;
       int count =0;
       for (int n : arr){
           if (n==f){
               count++;
           }}
       System.out.println(count);

       int [] arr = {1,2,3,1,2,1};
       int f = 2;
       int count = 0;
       for (int i=0;i< arr.length;i++){
           if (arr[i]==f){
               count++;
           }
       }
       for (int j=0;j<count;j++){

       }
   }
}

//Q8. Program to find a unique number in a given array
//package Arrayfull;
//public class Task {
//    public static void main(String[] args) {
//        int arr [] = {1,2,3,4,2,1,3};
//        for (int i=0; i< arr.length;i++){
//            for (int j=i+1;j< arr.length;j++){
//                if (arr[i]==arr[j]){
//                    arr[i]=-1;
//                    arr[j] =-1;
//                }
//            }
//        }
//        for (int k=0;k< arr.length;k++){
//            if(arr[k]!=-1){
//                System.out.println(arr[k]);
//            }
//        }
//    }
//}

//package Arrayfull;
//public class Task {
//    public static void main(String[] args) {
//        int arr [] = {1,2,3,4,2,1,3};
//        for (int i=0; i< arr.length;i++){
//            for (int j=i+1;j< arr.length;j++){
//                if (arr[i]==arr[j]){
//                    System.out.println(arr[i]);
//                }
//
//            }
//        }
//    }
//}

//Q9. find and return the largest element.
package Arrayfull;
public class LargestElement {
    public static int findLargest(int[] arr) {
        int max = arr[0];
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] > max) {
                max = arr[i];
            }
        }
        return max;
    }

    public static void main(String[] args) {
        int[] arr = {10, 45, 2, 89, 33};
        System.out.println("Largest Element: " + findLargest(arr));
    }
}

//Q.10. Left Rotate the Array by One Position
package Arrayfull;
import java.util.Arrays;
public class LeftRotate {
    public static void rotateLeftByOne(int[] arr) {
        int first = arr[0];
        for (int i = 0; i < arr.length - 1; i++) {
            arr[i] = arr[i + 1];
        }
        arr[arr.length - 1] = first;
    }

    public static void main(String[] args) {
        int[] arr = {1, 2, 3, 4, 5};
        rotateLeftByOne(arr);
        System.out.println("After rotation: " + Arrays.toString(arr));
    }
}

//Q.11 left rotate the Array by two position
public class Task {
        public static void main(String[] args) {
        int [] arr = {1,2,3,4,5};
        int one =arr[0];
        int two = arr[1];
        for (int i =0; i< arr.length-2 ;i++){
            arr[i] = arr[i+2];
        }
        arr[arr.length-1] = two;
        arr[arr.length-2]= one;
        for (int i=0;i< arr.length;i++){
            System.out.println(arr[i]);
        }
    }
}

//Q.12 Move All Zeros to the End
public class MoveZeros {
    public static void moveZeroes(int[] arr) {
        int index = 0; 
        for (int num : arr) {
            if (num != 0) {
                arr[index++] = num;
            }
        }
        while (index < arr.length) {
            arr[index++] = 0;
        }
    }
    public static void main(String[] args) {
        int[] arr = {0, 1, 0, 3, 12};
        moveZeroes(arr);
        System.out.print("Result: ");
        for (int num : arr) {
            System.out.print(num + " ");
        }
    }
}
