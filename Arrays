1) Program to find the second-largest element in the given array
a) without Taking input from user Solution is ->

import java.util.Arrays;
public class Arrayfull {
    public static void main(String[] args) {
        int arr [] = {7 , 3 , 9 , 4 , 5};
        Arrays.sort(arr);
        int n = arr.length - 2 ;
        System.out.println(arr[n]);
    }
}

b) with Taking input from user Solution is ->
import java.util.Scanner;

public class Arrayfull {
    static int max(int arr[]){
        int mx = Integer.MIN_VALUE;
        for (int i=0;i< arr.length;i++){
            if (arr[i]>mx){
                mx = arr[i];
            }
        }
        return mx;
    }
    static int Secondmx(int arr[]) {
        int max1 = max(arr);
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == max1) {
                arr[i] = Integer.MIN_VALUE;
            }
        }
        int max2 = max(arr);
        return max2;}
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter Size of array: ");
        int n = sc.nextInt();
        int arr [] = new int[n];
        System.out.print("Enter Element One by one: ");
        for (int i=0;i< arr.length;i++){
            arr[i]=sc.nextInt();
        }
        System.out.println(Secondmx(arr));
    }
}

2) For an array of integers return the first value that is repeating in the array
package Day6;
public class Arrayfull {

    static int first(int arr[]) {
        for (int i = 0; i < arr.length; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] == arr[j]) {
                    return arr[i];
                }}
        }return -1;
    }
public static void main(String[] args) {
        int arr [] = {7 , 3 , 9 , 4 , 5, 4, 5};
            System.out.println(first(arr));
}}

3) For an array of integers return the last value that is repeating in the array
package Arrayfull;
public class Task {
    static int last(int[] arr) {
        int lastRepeating = -1;
        for (int i = 0; i < arr.length; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] == arr[j]) {
                    lastRepeating = arr[i];  // update when a duplicate is found
                }
            }
        }
        return lastRepeating;
    }
    public static void main(String[] args) {
        int[] arr = {1, 2, 3, 1, 3};
        System.out.println("Last repeating value: " + last(arr));
    }
}

4) a) Swap using temporary variable
public class Practice1 {
    static void swap(int a,int b) {
        int temp;
        temp = a;
        a = b;
        b = temp;
        System.out.println(a+ " " + b);
    }
    public static void main(String[] args) {
        int a = 10;
        int b = 20;
        System.out.println("Before Swapping: ");
        System.out.println(a+ " " + b);
        System.out.println("After Swapping: ");
        swap(10,20);
    }
}

4) b) Swap using temporary variable in Array
public class Practice1 {
    static int[] swap(int [] arr) {
        int temp;
            temp = arr[0];
            arr[0] = arr[1];
            arr[1] = temp;

        return arr;}
    public static void main(String[] args) {
        int arr [] = {9,3};
        System.out.println("Before Swapping: ");
        for (int i=0;i< arr.length;i++){
            System.out.print(arr[i]+" ");
        }
        System.out.println(" ");
        swap(arr);
        System.out.println("After Swapping: ");
        for (int i=0;i< arr.length;i++){
            System.out.print(arr[i]+" ");
        }
    }
}

